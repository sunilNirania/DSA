#include <bits/stdc++.h>

void makeAdjList(vector<pair<int,int>>& edges,unordered_map<int,set<int>>& adjList){

    for(int i=0; i<edges.size(); i++){

        int u = edges[i].first;
        int v = edges[i].second;

        adjList[v].insert(u);
        adjList[u].insert(v);

    }

}

void bfs(unordered_map<int,set<int>>& adjList, unordered_map<int,bool>& visited,vector<int>& ans,int node){

    queue<int> q;
    q.push(node);

    visited[node] = 1;

    while(!q.empty()){

        int frontNode = q.front();
        q.pop();
        ans.push_back(frontNode);

        for(auto i:adjList[frontNode]){

            if(visited[i] == 0)
                q.push(i);
            visited[i] = 1;

        }

    }

}
vector<int> BFS(int vertex, vector<pair<int, int>> edges)
{
    unordered_map<int,set<int>> adjList;
    unordered_map<int,bool> visited;
    vector<int> ans;

    makeAdjList(edges,adjList);
    
    for(int i=0; i<vertex; i++){

        if(visited[i] == 0)
            bfs(adjList,visited,ans,i);

    }

    return ans;

}
