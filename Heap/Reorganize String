class compare{

public:
    bool operator()(pair<char,int> a,pair<char,int> b){

        return a.second < b.second;

    }

};

class Solution {
public:
    string reorganizeString(string s) {
        map<char,int> freq;
        string ans = "";
        for(auto i:s)
            freq[i]++;

        priority_queue<pair<char,int>,vector<pair<char,int>>,compare> maxHeap;

        for(auto i:freq)
            maxHeap.push({i.first,i.second});

        while(maxHeap.size()>1){

            pair<char,int> temp1 = maxHeap.top();
            maxHeap.pop();
            pair<char,int> temp2 = maxHeap.top();
            maxHeap.pop();

            ans+=temp1.first;
            ans+=temp2.first;
          
            temp1.second--;
            temp2.second--;

            if(temp1.second > 0)
                maxHeap.push(temp1);
            if(temp2.second > 0)
                maxHeap.push(temp2);


        }

        if(!maxHeap.empty()){

            if(maxHeap.top().second > 1)
                return "";
            else
                ans+=maxHeap.top().first;
        }

        return ans;
    }
};
