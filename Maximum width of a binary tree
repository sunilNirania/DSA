class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        
        if(!root)
            return 0;
        
        int ans = 1;
        queue<pair<TreeNode*,int>> q;
        q.push({root,0});

        while(!q.empty()){

            int a,b;
            int size = q.size();

            for(int i=0; i<size; i++){

                pair<TreeNode*,int> temp = q.front();
                q.pop();
                TreeNode* frontNode = temp.first;
                long long int nodeNum = temp.second;

                if(i==0)
                    a = temp.second;
                if(i==size-1)
                    b = temp.second;

                if(frontNode->left)
                    q.push(make_pair(frontNode->left,2*nodeNum+1));
                if(frontNode->right)
                    q.push(make_pair(frontNode->right,2*nodeNum+2));

            }

            ans = max(ans,b-a+1);

        }

        return ans;
    }
};
