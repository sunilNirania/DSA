void inorder(TreeNode<int>* root,vector<int>& val){

    if(!root)
        return;

    inorder(root->left,val);
    val.push_back(root->data);
    inorder(root->right,val);

}

TreeNode<int>* solve(vector<int>& val,int s,int e){

    if(s>e)
        return NULL;

    int mid = (s+e)/2;
    int value = val[mid];
    TreeNode<int>* root = new TreeNode<int>(value);
    root->left = solve(val,s,mid-1);
    root->right = solve(val,mid+1,e);

    return root;

}
TreeNode<int>* balancedBst(TreeNode<int>* root) {
   vector<int> val;
   inorder(root,val);

   return solve(val,0,val.size()-1);
   
}
